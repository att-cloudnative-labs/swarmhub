---

- name: Create directory for go server
  file: path=/opt/go-webserver state=directory owner=centos group=centos
  become: yes
  when: "'locust.master' in group_names"
  
#- name: copy over ping service
#  template:
#    src: ping.service.j2
#    dest: /etc/systemd/system/ping.service
#  become: yes

#- name: start the ping service
#  systemd:
#    name: ping
#    state: started
#  become: yes

- name: copy over locust id
  template:
    src: id.j2
    dest: /opt/python/locust/id
  with_items: "{{ groups['locust.slave'] }}"
  when: item == inventory_hostname

- name: copy over locust max id
  template:
    src: max_id.j2
    dest: /opt/python/locust/max_id

- name: copy go webserver
  copy:
    src: locust-go
    dest: /opt/go-webserver/locust-go
    mode: 0777
  when: "'locust.master' in group_names"

- name: copy jwt
  copy:
    src: /etc/jwt/jwt
    dest: /opt/go-webserver/jwt
  when: "'locust.master' in group_names"

- name: Copy over tls creation script
  copy:
    src: createtls.sh
    dest: /opt/go-webserver/
    mode: 0775
  when: "'locust.master' in group_names"

- name: execute tls creation script
  shell: 
    cmd: /opt/go-webserver/createtls.sh
    chdir: /opt/go-webserver
  when: "'locust.master' in group_names"

- name: copy over go webserver service
  template:
    src: go-webserver.service.j2
    dest: /etc/systemd/system/go-webserver.service
  become: yes
  when: "'locust.master' in group_names"

- name: start the go webserver
  systemd:
    name: go-webserver
    state: started
  become: yes
  when: "'locust.master' in group_names"

- name: Copy over default locust file
  synchronize:
    src: locustfile.py
    dest: /opt/python/locust/locustfile.py

- name: Copy over prometheus plugin
  synchronize:
    src: locust_prometheus.py
    dest: /opt/python/locust/locust_prometheus.py

- name: Download s3 files
  aws_s3:
    bucket: "{{ aws_s3_bucket }}"
    region: "{{ aws_s3_region }}"
    object: /scripts/{{ script_id }}/file/{{ script_filename }}
    dest: /tmp/script.zip
    mode: get
    aws_access_key: "{{ aws_s3_access_key }}"
    aws_secret_key: "{{ aws_s3_secret_key }}"
  connection: local

- name: Extract scripts into folder
  unarchive:
    src: "/tmp/script.zip"
    dest: /opt/python/locust/

- name: Check if requirements.txt exists
  stat: 
    path: /opt/python/locust/requirements.txt
  register: additional_requirements

- name: Install requirements
  command: /opt/python/venv/bin/pip install -r /opt/python/locust/requirements.txt
  when: additional_requirements.stat.exists == True

- name: copy over locust master service
  template:
    src: locust-master.service.j2
    dest: /etc/systemd/system/locust-master.service
  become: yes
  when: "'locust.master' in group_names"

- name: copy over locust slave service
  template:
    src: locust-slave@.service.j2
    dest: /etc/systemd/system/locust-slave@.service
  become: yes
  when: "'locust.slave' in group_names"

- name: restart locust master
  systemd:
    name: locust-master
    state: restarted
    daemon_reload: yes
  become: yes
  when: "'locust.master' in group_names"

## doesn't appear to work 
#- name: restart locust slave
#  systemd:
#    name: locust-slave@{1..{{ ansible_processor_vcpus }}}
#    state: restarted
#    daemon_reload: yes
#  become: yes
#  when: "'locust.slave' in group_names"

- name: restart locust slave
  shell: systemctl restart locust-slave@{1..{{ ansible_processor_vcpus }}}
  become: yes
  args:
    executable: /usr/bin/bash
  when: "'locust.slave' in group_names"
